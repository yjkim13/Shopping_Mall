{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/utils/ImageSlider.js","components/views/LandingPage/Sections/CheckBox.js","components/views/LandingPage/Sections/RadioBox.js","components/views/LandingPage/Sections/Datas.js","components/views/LandingPage/Sections/SearchFeature.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/utils/FileUpload.js","components/views/UploadProductPage/UploadProductPage.js","components/views/LandingPage/Sections/ProductImage.js","components/views/LandingPage/Sections/ProductInfo.js","components/views/DetailProductPage/DetailProductPage.js","components/views/CartPage/Sections/UserCardBlock.js","components/views/CartPage/CartPage.js","components/views/ProductManagePage/Sections/ProductBlock.js","components/views/ProductManagePage/ProductManagePage.js","components/views/UpdateProductPage/UpdateProductPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","ImageSlider","autoplay","images","map","image","index","key","style","width","maxHeight","src","alt","Panel","Collapse","CheckBox","useState","Checked","setChecked","defaultActiveKey","header","list","value","Fragment","onChange","currentIndex","indexOf","newChecked","splice","handleFilters","handleToggle","name","checked","RadioBox","Value","setValue","Group","event","target","_id","continents","price","Search","Input","SearchFeature","SearchTrem","setSearchTrem","placeholder","currentTarget","refreshFunction","LandingPage","Products","setProducts","Skip","setSkip","Limit","PostSize","setPostSize","Filters","setFilters","setSearchTerm","getProdcts","skip","limit","body","post","success","loadMore","productInfo","postSize","alert","renderCards","product","lg","md","sx","cover","href","title","description","filters","category","newFilters","console","log","priceValues","array","parseInt","handelPrice","showFilteredResults","margin","textAlign","CarTwoTone","spin","twoToneColor","RocketTwoTone","gutter","xs","display","justifyContent","newSearchTerm","filter","searchTerm","onClick","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","className","level","Item","prefix","UserOutlined","color","onBlur","LockOutlined","fontSize","border","padding","borderRadius","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","confirmPassword","oneOf","lastname","moment","unix","registerUser","errmsg","label","hasFeedback","validateStatus","LeftMenu","mode","SubMenu","Menu","MenuItemGroup","ItemGroup","logoutHandler","status","userData","role","marginRight","marginBottom","count","cart","length","ShoppingCartOutlined","marginLeft","NavBar","visible","setVisible","position","zIndex","AlignRightOutlined","placement","closable","onClose","Footer","height","flexDirection","alignItems","SmileOutlined","FileUpload","Images","setImages","imagesData","productId","match","params","onDrop","files","formData","FormData","append","fileName","getRootProps","getInputProps","PlusOutlined","overflowX","newImages","deleteHandler","TextArea","Continents","Key","UploadProductPage","setTitle","Description","setDescription","Price","setPrice","Continent","setContinent","submitHandler","writer","Axios","maxWidth","item","ProductImage","detail","original","thumbnail","items","ProductInfo","sold","views","size","addToCart","DetailProductPage","Product","setProduct","UserCardBlock","renderCartImage","products","quantity","CartPage","Total","setTotal","ShowTotal","setShowTotal","cartItems","userCart","cartItem","forEach","productDetail","calculateTotal","cartDetail","total","removeCartItem","marginTop","ProductBlock","renderProductImage","deleteProduct","ProductManagePage","TotalList","setTotalList","ShowList","setShowList","UpdateProductPage","continent","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.981161ab.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    ADD_TO_CART,\r\n    GET_CART_ITEMS,\r\n    REMONE_CART_ITEM\r\n\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit) {\r\n    const request = axios.post(`${USER_SERVER}/register`, dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit) {\r\n    const request = axios.post(`${USER_SERVER}/login`, dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth() {\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser() {\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function addToCart(id) {\r\n\r\n    let body = {\r\n        productId: id\r\n    }\r\n\r\n    const request = axios.post(`${USER_SERVER}/addToCart`, body)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: ADD_TO_CART,\r\n        payload: request\r\n    }\r\n}\r\nexport function getCartItems(cartItems, userCart) {\r\n\r\n\r\n    const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`)\r\n        .then(response => {\r\n\r\n            //CartItem들에 해당하는 정보들을\r\n            //Product Collection에서 가져온 후에\r\n            // Quantity 정보를 넣어준다.\r\n            userCart.forEach(cartItem => {\r\n                response.data.forEach((productDetail, index) => {\r\n                    if (cartItem.id === productDetail._id) {\r\n                        response.data[index].quantity = cartItem.quantity\r\n                    }\r\n                })\r\n            })\r\n\r\n            return response.data;\r\n        });\r\n\r\n    return {\r\n        type: GET_CART_ITEMS,\r\n        payload: request\r\n    }\r\n}\r\nexport function removeCartItem(productId) {\r\n\r\n\r\n    const request = axios.get(`/api/users/removeFromCart?id=${productId}`)\r\n        .then(response => {\r\n            //productInfo와 cart 정보를 조합해서 CartDetail을 만든다.\r\n            response.data.cart.forEach(item => {\r\n                response.data.productInfo.forEach((product, index) => {\r\n                    if (item.id === product._id) {\r\n                        response.data.productInfo[index].quantity = item.quantity\r\n                    }\r\n                })\r\n            })\r\n\r\n            return response.data;\r\n        });\r\n\r\n    return {\r\n        type: REMONE_CART_ITEM,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\nexport const ADD_TO_CART = 'add_to_cart';\r\nexport const GET_CART_ITEMS = 'get_cart_items'\r\nexport const REMONE_CART_ITEM = 'remove_cart_item'","//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Carousel } from 'antd'\r\n\r\nfunction ImageSlider(props) {\r\n    return (\r\n        <div>\r\n            <Carousel autoplay>\r\n                {props.images.map((image, index) => (\r\n                    <div key={index}>\r\n                        <img style={{ width: '100%', maxHeight: '150px' }}\r\n                            src={`http://localhost:5000/uploads/${image}`} alt=\"description\" />\r\n                    </div>\r\n                ))}\r\n            </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSlider\r\n","import React, { useState } from 'react'\r\nimport { Collapse, Checkbox } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction CheckBox(props) {\r\n\r\n    const [Checked, setChecked] = useState([])\r\n\r\n    const handleToggle = (value) => {\r\n        //누른 것의 index를 구하고\r\n        const currentIndex = Checked.indexOf(value)\r\n\r\n        //전체 checked된 State에서 현재 누른 CheckBox가 이미 있다면\r\n        const newChecked = [...Checked]\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value)\r\n            // 빼주고\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n        setChecked(newChecked)\r\n        props.handleFilters(newChecked)\r\n\r\n\r\n        //State 넣어준다.\r\n    }\r\n\r\n    const renderCheckboxLists = () => props.list && props.list.map((value, index) => (\r\n        <React.Fragment key={index}>\r\n            <Checkbox onChange={() => handleToggle(value.name)} checked={Checked.indexOf(value.name) === -1 ? false : true}>\r\n                {value.name}\r\n            </Checkbox>\r\n        </React.Fragment>\r\n    ))\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['0']}>\r\n                <Panel header=\"Continents\" key=\"1\">\r\n                    {renderCheckboxLists()}\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckBox\r\n","import React, { useState } from 'react'\r\nimport { Collapse, Radio } from 'antd';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction RadioBox(props) {\r\n\r\n    const [Value, setValue] = useState(0)\r\n\r\n    const renderRadioBox = () => (\r\n        props.list && props.list.map(value => (\r\n            <Radio key={value._id} value={value._id}> {value.name} </Radio>\r\n\r\n        ))\r\n    )\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n        props.handleFilters(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['0']}>\r\n                <Panel header=\"Price\" key=\"1\">\r\n                    <Radio.Group onChange={handleChange} value={Value}>\r\n                        {renderRadioBox()}\r\n                    </Radio.Group>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioBox\r\n","const continents = [\r\n    {\r\n        \"_id\": 1,\r\n        \"name\": \"Africa\"\r\n    },\r\n    {\r\n        \"_id\": 2,\r\n        \"name\": \"Europe\"\r\n    },\r\n    {\r\n        \"_id\": 3,\r\n        \"name\": \"Asia\"\r\n    },\r\n    {\r\n        \"_id\": 4,\r\n        \"name\": \"North America\"\r\n    },\r\n    {\r\n        \"_id\": 5,\r\n        \"name\": \"South America\"\r\n    },\r\n    {\r\n        \"_id\": 6,\r\n        \"name\": \"Australia\"\r\n    },\r\n    {\r\n        \"_id\": 7,\r\n        \"name\": \"Antarctica\"\r\n    }\r\n]\r\n\r\nconst price = [\r\n    {\r\n        \"_id\": 0,\r\n        \"name\": \"Any\",\r\n        \"array\": []\r\n    },\r\n    {\r\n        \"_id\": 1,\r\n        \"name\": \"$0 to $199\",\r\n        \"array\": [0, 199]\r\n    },\r\n    {\r\n        \"_id\": 2,\r\n        \"name\": \"$199 to $249\",\r\n        \"array\": [199, 249]\r\n    },\r\n    {\r\n        \"_id\": 3,\r\n        \"name\": \"$250 to $299\",\r\n        \"array\": [250, 299]\r\n    },\r\n    {\r\n        \"_id\": 4,\r\n        \"name\": \"$300 to $349\",\r\n        \"array\": [300, 349]\r\n    },\r\n    {\r\n        \"_id\": 5,\r\n        \"name\": \"More than $350\",\r\n        \"array\": [350, 150000]\r\n    },\r\n]\r\n\r\nexport {\r\n    continents,\r\n    price\r\n}","import React, { useState } from 'react'\r\nimport { Input } from 'antd';\r\n\r\nconst { Search } = Input;\r\n\r\nfunction SearchFeature(props) {\r\n\r\n    const [SearchTrem, setSearchTrem] = useState(\"\")\r\n\r\n    const searchHandler = (event) => {\r\n        setSearchTrem(event.currentTarget.value)\r\n        props.refreshFunction(event.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Search\r\n                placeholder=\"input search text\"\r\n                onChange={searchHandler}\r\n                style={{ width: 200 }}\r\n                value={SearchTrem}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchFeature\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { RocketTwoTone, CarTwoTone } from '@ant-design/icons';\r\nimport Meta from 'antd/lib/card/Meta';\r\nimport { Col, Row, Card } from 'antd'\r\nimport ImageSlider from '../../utils/ImageSlider';\r\nimport CheckBox from './Sections/CheckBox';\r\nimport RadioBox from './Sections/RadioBox';\r\nimport { continents, price } from './Sections/Datas';\r\nimport SearchFeature from './Sections/SearchFeature';\r\n\r\nfunction LandingPage() {\r\n\r\n    const [Products, setProducts] = useState([])\r\n    const [Skip, setSkip] = useState(0)\r\n    const [Limit, setLimit] = useState(8)\r\n    const [PostSize, setPostSize] = useState(0)\r\n    const [Filters, setFilters] = useState({\r\n        continents: [],\r\n        price: []\r\n    })\r\n    const [SearchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n\r\n        let body = {\r\n            skip: Skip,\r\n            limit: Limit\r\n        }\r\n\r\n        getProdcts(body)\r\n\r\n    }, [])\r\n\r\n    const getProdcts = (body) => {\r\n        axios.post('/api/product/products', body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n\r\n                    if (body.loadMore) {\r\n                        setProducts([...Products, ...response.data.productInfo])\r\n                    } else {\r\n                        setProducts(response.data.productInfo)\r\n                    }\r\n                    setPostSize(response.data.postSize)\r\n                } else {\r\n                    alert(\"상품을 가져오는데 실패했습니다.\")\r\n                }\r\n            })\r\n    }\r\n\r\n    const loadMoreHandler = () => {\r\n\r\n        let skip = Skip + Limit\r\n\r\n        let body = {\r\n            skip: skip,\r\n            limit: Limit,\r\n            loadMore: true,\r\n            filters: Filters\r\n\r\n        }\r\n        getProdcts(body)\r\n        setSkip(skip)\r\n    }\r\n\r\n    const renderCards = Products.map((product, index) => {\r\n        return <Col lg={6} md={8} sx={24} key={index}>\r\n            <Card\r\n                cover={<a href={`/product/${product._id}`}><ImageSlider images={product.images} /></a>}\r\n            >\r\n                <Meta\r\n                    title={product.title}\r\n                    description={`$${product.price}`}\r\n                />\r\n            </Card>\r\n        </Col>\r\n    })\r\n\r\n    const showFilteredResults = (filters) => {\r\n\r\n\r\n        let body = {\r\n            skip: 0,\r\n            limit: Limit,\r\n            filters: filters\r\n        }\r\n        getProdcts(body)\r\n        setSkip(0)\r\n\r\n    }\r\n\r\n    const handelPrice = (value) => {\r\n        const data = price;\r\n        let array = [];\r\n\r\n        for (let key in data) {\r\n            if (data[key]._id === parseInt(value, 10)) {\r\n                console.log('value', value);\r\n                array = data[key].array\r\n            }\r\n        }\r\n        return array\r\n    }\r\n\r\n    const handleFilters = (filters, category) => {\r\n\r\n        const newFilters = { ...Filters }\r\n\r\n        newFilters[category] = filters\r\n        console.log('filters', filters);\r\n\r\n        if (category === 'price') {\r\n            let priceValues = handelPrice(filters)\r\n            console.log('filters', filters);\r\n            newFilters[category] = priceValues\r\n\r\n        }\r\n\r\n        showFilteredResults(newFilters)\r\n        setFilters(newFilters)\r\n\r\n\r\n    }\r\n\r\n    const updateSearchTerm = (newSearchTerm) => {\r\n\r\n        let body = {\r\n            skip: 0,\r\n            limit: Limit,\r\n            filter: Filters,\r\n            searchTerm: newSearchTerm\r\n        }\r\n        setSkip(0)\r\n        setSearchTerm(newSearchTerm)\r\n        getProdcts(body)\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ width: '75%', margin: '3rem auto' }}>\r\n            <div style={{ textAlign: 'center' }}>\r\n                <h2><CarTwoTone spin twoToneColor=\"#ff0000\" />이제 모두 여행을 떠나요!<RocketTwoTone spin /></h2>\r\n            </div>\r\n            {/* Filter */}\r\n            <Row gutter={[16, 16]}>\r\n                <Col lg={12} xs={24}>\r\n                    {/* CheckBox */}\r\n                    <CheckBox list={continents} handleFilters={filters => handleFilters(filters, \"continents\")} />\r\n                </Col>\r\n                <Col lg={12} xs={24}>\r\n                    {/* RadioBox */}\r\n                    <RadioBox list={price} handleFilters={filters => handleFilters(filters, \"price\")} />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            {/* Search */}\r\n            <div style={{ display: 'flex', justifyContent: 'flex-end', margin: '1rem auto' }}>\r\n                <SearchFeature\r\n                    refreshFunction={updateSearchTerm}\r\n                />\r\n\r\n            </div>\r\n\r\n            {/* Cards */}\r\n            <Row gutter={[16, 16]} >\r\n                {renderCards}\r\n\r\n            </Row>\r\n\r\n\r\n\r\n            <br />\r\n\r\n            {PostSize >= Limit &&\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <button onClick={loadMoreHandler}>더보기</button>\r\n                </div>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\r\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                  forgot password\r\n                </a>\r\n                <div>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                    Log in\r\n                  </Button>\r\n                </div>\r\n                Or <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n\r\n\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        lastName: '',\r\n        name: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string()\r\n          .required('Name is required'),\r\n        lastName: Yup.string()\r\n          .required('Last Name is required'),\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Confirm Password is required')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then(response => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg)\r\n            }\r\n          })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\r\n\r\n              <Form.Item required label=\"Name\">\r\n                <Input\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your name\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <div className=\"input-feedback\">{errors.name}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Last Name\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n","import React from 'react';\r\nimport { Menu } from 'antd';\r\n\r\n\r\nfunction LeftMenu(props) {\r\n  return (\r\n    <Menu mode={props.mode}>\r\n      <Menu.Item key=\"mail\">\r\n        <a href=\"/\">Home</a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Menu, Badge } from 'antd';\r\nimport { ShoppingCartOutlined } from '@ant-design/icons'\r\nimport axios from 'axios';\r\nimport { USER_SERVER } from '../../../Config';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector(state => state.user)\r\n\r\n  const SubMenu = Menu.SubMenu;\r\n  const MenuItemGroup = Menu.ItemGroup;\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then(response => {\r\n      if (response.status === 200) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert('Log Out Failed')\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"mail\">\r\n          <a href=\"/login\">Signin</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"/register\">Signup</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  } else if (user.userData && user.userData.role) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <SubMenu title={<span>Manage</span>}>\r\n          <MenuItemGroup title=\"Products\">\r\n            <Menu.Item key=\"upload\" style={{ marginRight: -5 }}>\r\n              <a href=\"/product/upload\">Upload</a>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"update\" style={{ marginRight: -5 }}>\r\n              <a href=\"/product/products/list\">Update & Delete</a>\r\n            </Menu.Item>\r\n          </MenuItemGroup>\r\n          <MenuItemGroup title=\"Members\">\r\n            <Menu.Item key=\"setting:3\">회원관리</Menu.Item>\r\n          </MenuItemGroup>\r\n        </SubMenu>\r\n        <Menu.Item key=\"cart\" style={{ marginBottom: -5 }}>\r\n          <Badge count={user.userData && user.userData.cart.length}>\r\n            <a href=\"/user/cart\" className=\"head-exam\" style={{ marginRight: -22 }}>\r\n              <ShoppingCartOutlined style={{ fontSize: '200%', marginLeft: -3 }} />\r\n            </a>\r\n          </Badge>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"logout\" style={{ marginLeft: -5 }}>\r\n          <a onClick={logoutHandler}>Logout</a>\r\n        </Menu.Item>\r\n\r\n      </Menu>\r\n    )\r\n  } else {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"cart\" style={{ marginBottom: -5 }}>\r\n          <Badge count={user.userData && user.userData.cart.length}>\r\n            <a href=\"/user/cart\" className=\"head-exam\" style={{ marginRight: -22 }}>\r\n              <ShoppingCartOutlined style={{ fontSize: '200%', marginLeft: -3 }} />\r\n            </a>\r\n          </Badge>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"logout\" style={{ marginLeft: -5 }}>\r\n          <a onClick={logoutHandler}>Logout</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n","import React, { useState } from 'react';\r\nimport LeftMenu from './Sections/LeftMenu';\r\nimport RightMenu from './Sections/RightMenu';\r\nimport { Drawer, Button } from 'antd';\r\nimport { AlignRightOutlined } from \"@ant-design/icons\";\r\nimport './Sections/Navbar.css';\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true)\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false)\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"menu\"\r\n      style={{ position: \"fixed\", zIndex: 5, width: \"100%\" }}\r\n    >\r\n      <div className=\"menu__logo\">\r\n        <a href=\"/\">Travel</a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_left\">\r\n          <LeftMenu mode=\"horizontal\" />\r\n        </div>\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <AlignRightOutlined />\r\n        </Button>\r\n        <Drawer\r\n          title=\"Basic Drawer\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <LeftMenu mode=\"inline\" />\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\nimport { SmileOutlined } from \"@ant-design/icons\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"80px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        fontSize: \"1rem\",\r\n      }}\r\n    >\r\n      <p>\r\n        {\" \"}\r\n        Kim's Coding <SmileOutlined />\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState,useEffect} from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nfunction FileUpload(props) {\r\n  console.log(props);\r\n  \r\n  const [Images, setImages] = useState([])\r\n\r\n \r\n\r\n    useEffect(() => {\r\n      if(props && props.imagesData) {\r\n        const productId = props.imagesData.match.params.productId\r\n        axios.get(`/api/product/products_by_id?id=${productId}&type=single`)\r\n            .then(response => {\r\n                setImages(response.data[0].images);\r\n            })\r\n            .catch(err => alert(err))}\r\n    }, [])\r\n  \r\n \r\n\r\n  \r\n\r\n  const dropHandler = (files) => {\r\n\r\n    let formData = new FormData();\r\n\r\n    const config = {\r\n      header: { 'content-type': 'multipart/form-data' }\r\n    }\r\n    formData.append(\"file\", files[0])\r\n\r\n    axios.post('/api/product/image', formData, config)\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          setImages([...Images, response.data.fileName])\r\n          console.log(response.data.fileName);\r\n          props.refreshFunction([...Images, response.data.fileName])\r\n\r\n        } else {\r\n          alert(\"파일을 저장하는데 실패했습니다.\")\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n  const deleteHandler = (image) => {\r\n    const currentIndex = Images.indexOf(image);\r\n\r\n    let newImages = [...Images];\r\n    newImages.splice(currentIndex, 1)\r\n    setImages(newImages)\r\n    props.refreshFunction(newImages)\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n      <Dropzone onDrop={dropHandler}>\r\n        {({ getRootProps, getInputProps }) => (\r\n\r\n          <div\r\n            style={{\r\n              width: 300, height: 240, border: '1px solid lightgray',\r\n              display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n            }}\r\n            {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <PlusOutlined style={{ fontSize: '72px' }} />\r\n          </div>\r\n\r\n        )}\r\n      </Dropzone>\r\n\r\n\r\n      <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\r\n        {Images.map((image, index) => (\r\n          <div onClick={() => deleteHandler(image)} key={index}>\r\n            <img style={{ minWidth: '300px', width: '300px', height: '240px' }}\r\n              src={`http://localhost:5000/uploads/${image}`} alt=\"delete\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileUpload\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Input } from 'antd';\r\nimport FileUpload from '../../utils/FileUpload';\r\nimport Axios from 'axios';\r\n\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n    { Key: 1, value: \"Africa\" },\r\n    { Key: 2, value: \"Europe\" },\r\n    { Key: 3, value: \"Asia\" },\r\n    { Key: 4, value: \"North America\" },\r\n    { Key: 5, value: \"South America\" },\r\n    { Key: 6, value: \"Australia\" },\r\n    { Key: 7, value: \"Antarctica\" },\r\n\r\n]\r\n\r\nfunction UploadProductPage(props) {\r\n\r\n    const [Title, setTitle] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Price, setPrice] = useState(0)\r\n    const [Continent, setContinent] = useState(1)\r\n    const [Images, setImages] = useState([])\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const descriptionChangeHandler = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const priceChangeHandler = (event) => {\r\n        setPrice(event.currentTarget.value)\r\n    }\r\n\r\n    const continentChangeHandler = (event) => {\r\n        setContinent(event.currentTarget.value)\r\n    }\r\n\r\n    const updateImages = (newImages) => {\r\n        setImages(newImages)\r\n    }\r\n    const submitHandler = (event) => {\r\n\r\n\r\n        if (!Title || !Description || !Price || !Continent || !Images) {\r\n            return alert(\" 모든 값을 넣어주셔야 합니다.\")\r\n        }\r\n        //서버에 채운 값들을 Request로 보낸다.\r\n\r\n        const body = {\r\n            writer: props.user.userData._id,\r\n            title: Title,\r\n            description: Description,\r\n            price: Price,\r\n            images: Images,\r\n            continents: Continent\r\n        }\r\n        Axios.post(\"/api/product\", body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert(\"상품 업로드에 성공했습니다.\")\r\n                    props.history.push('/');\r\n                } else {\r\n                    alert(\"상품 업로드에 실패했습니다.\")\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <h2> 여행 상품 업로드</h2>\r\n            </div>\r\n            <Form onSubmit={submitHandler}>\r\n                {/*Drop Zone */}\r\n\r\n                <FileUpload refreshFunction={updateImages} />\r\n\r\n                <br />\r\n                <br />\r\n                <label>이름</label>\r\n                <Input onChange={titleChangeHandler} value={Title} />\r\n                <br />\r\n                <br />\r\n                <label>설명</label>\r\n                <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n                <br />\r\n                <br />\r\n                <label>가격($)</label>\r\n                <Input type=\"number\" onChange={priceChangeHandler} value={Price} />\r\n                <br />\r\n                <br />\r\n                <select onChange={continentChangeHandler} >\r\n                    {Continents.map(item => (\r\n                        <option key={item.Key} value={item.value}> {item.value} </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <Button type=\"submit\" onClick={submitHandler}>\r\n                    확인\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadProductPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nfunction ProductImage(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (props.detail.images && props.detail.images.length > 0) {\r\n            let images = []\r\n\r\n            props.detail.images.map(item => {\r\n                images.push({\r\n                    original: `http://localhost:5000/uploads/${item}`,\r\n                    thumbnail: `http://localhost:5000/uploads/${item}`\r\n                })\r\n\r\n            })\r\n            setImages(images)\r\n        }\r\n    }, [props.detail])\r\n\r\n    return (\r\n        <div>\r\n            <ImageGallery items={Images} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductImage\r\n","import React from 'react'\r\nimport { Descriptions, Button } from 'antd';\r\nimport { useDispatch } from 'react-redux'\r\nimport { addToCart } from '../../../../_actions/user_actions'\r\n\r\nfunction ProductInfo(props) {\r\n    const dispatch = useDispatch()\r\n\r\n    const clickHandler = () => {\r\n        //필요한 정보를 Cart 필드에 넣어준다.\r\n        dispatch(addToCart(props.detail._id))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Descriptions title=\"Product Info\">\r\n                <Descriptions.Item label=\"Price\">{props.detail.price}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Sold\">{props.detail.sold}</Descriptions.Item>\r\n                <Descriptions.Item label=\"View\">{props.detail.views}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Description\">{props.detail.description}</Descriptions.Item>\r\n            </Descriptions>\r\n\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Button size='large' shape='round' type='danger' onClick={clickHandler}>\r\n                    Add to Cart\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductInfo\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport ProductImage from '../LandingPage/Sections/ProductImage';\r\nimport ProductInfo from '../LandingPage/Sections/ProductInfo';\r\nimport { Row, Col } from 'antd'\r\n\r\nfunction DetailProductPage(props) {\r\n\r\n    const productId = props.match.params.productId\r\n\r\n    const [Product, setProduct] = useState({})\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/product/products_by_id?id=${productId}&type=single`)\r\n            .then(response => {\r\n                setProduct(response.data[0])\r\n            })\r\n            .catch(err => alert(err))\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ width: '100%', padding: '3rem 4rem' }}>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <h1>{Product.title}</h1>\r\n\r\n            </div>\r\n\r\n            <br />\r\n            <Row gutter={[16, 16]}>\r\n                <Col lg={12} sm={24}>\r\n                    {/*Product Image*/}\r\n                    <ProductImage detail={Product} />\r\n                </Col>\r\n\r\n                <Col lg={12} sm={24}>\r\n                    {/*Product Info*/}\r\n                    <ProductInfo detail={Product} />\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailProductPage\r\n","import React from 'react'\r\nimport './UserCardBlock.css'\r\n\r\nfunction UserCardBlock(props) {\r\n\r\n    const renderCartImage = (images) => {\r\n        if (images.length > 0) {\r\n            let image = images[0]\r\n            return `http://localhost:5000/uploads/${image}`\r\n        }\r\n\r\n    }\r\n\r\n    const renderItems = () => (\r\n        props.products && props.products.map((product, index) => (\r\n            <tr key={index}>\r\n                <td>\r\n                    <img style={{ width: '70px' }} alt=\"product\"\r\n                        src={renderCartImage(product.images)} />\r\n                </td>\r\n                <td>\r\n                    {product.quantity} EA\r\n                </td>\r\n                <td>\r\n                    $ {product.price}\r\n                </td>\r\n                <td>\r\n                    <button onClick={() => props.removeItem(product._id)}>\r\n                        REMOVE\r\n                    </button>{/*product id를 넣는 이유는 id로 상품을 찾아서 삭제하기 위해*/}\r\n                </td>\r\n            </tr>\r\n        ))\r\n    )\r\n\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product Image</th>\r\n                        <th>Product Quantity</th>\r\n                        <th>Product Price</th>\r\n                        <th>Remove From Cart</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderItems()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCardBlock\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getCartItems, removeCartItem } from '../../../_actions/user_actions';\r\nimport UserCardBlock from './Sections/UserCardBlock';\r\nimport { Empty } from 'antd'\r\n\r\nfunction CartPage(props) {\r\n    const dispatch = useDispatch()\r\n    const [Total, setTotal] = useState(0)\r\n    const [ShowTotal, setShowTotal] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        let cartItem = []\r\n\r\n        //리덕스 User State 안에 cart 안에 상품이 들어있는지 확인.\r\n        if (props.user.userData && props.user.userData.cart) {\r\n            if (props.user.userData.cart.length > 0) {\r\n                props.user.userData.cart.forEach(item => {\r\n                    cartItem.push(item.id)\r\n                })\r\n                dispatch(getCartItems(cartItem, props.user.userData.cart))\r\n                    .then(response => { calculateTotal(response.payload) })\r\n            }\r\n        }\r\n\r\n    }, [props.user.userData])\r\n\r\n    const calculateTotal = (cartDetail) => {\r\n        let total = 0;\r\n\r\n        cartDetail.map(item => {\r\n            total += parseInt(item.price, 10) * item.quantity\r\n        })\r\n        setTotal(total)\r\n        setShowTotal(true)\r\n    }\r\n\r\n    let removeFromCart = (productId) => {\r\n        dispatch(removeCartItem(productId))\r\n            .then(response => {\r\n                if (response.payload.productInfo.length <= 0) {\r\n                    setShowTotal(false)\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <h1> My Cart</h1>\r\n            <div>\r\n                <UserCardBlock products={props.user.cartDetail} removeItem={removeFromCart} />\r\n            </div>\r\n\r\n            {ShowTotal ?\r\n                <div style={{ marginTop: '3rem' }}>\r\n                    <h2>Total Amount: ${Total}</h2>\r\n                </div>\r\n                :\r\n                <>\r\n                    <br />\r\n                    <Empty description={false} />\r\n                    <h2>Total Amount: $0</h2>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartPage\r\n","import React from 'react'\r\nimport './ProductBlock.css'\r\n\r\nfunction ProductBlock(props) {\r\n\r\n\r\n    const renderProductImage = (images) => {\r\n        if (images.length > 0) {\r\n            let image = images[0]\r\n            return `http://localhost:5000/uploads/${image}`\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const renderItems = () => (\r\n        props.products && props.products.map((product, index) => (\r\n            <tr key={index}>\r\n                <td>\r\n                    <img style={{ width: '70px' }} alt=\"product\"\r\n                        src={renderProductImage(product.images)} />\r\n                </td>\r\n                <td>\r\n                    {product.title}\r\n                </td>\r\n                <td>\r\n                    {product.continents}\r\n                </td>\r\n                <td>\r\n                    $ {product.price}\r\n                </td>\r\n                <td>\r\n                    <button>\r\n                        {<a href={`/product/products/update/${product._id}`}>UPDATE</a>}\r\n                    </button>\r\n                </td>\r\n                <td>\r\n                    <button onClick={() => props.deleteProduct(`${product._id}`)}>\r\n                        DELETE\r\n                    </button>{/*product id를 넣는 이유는 id로 상품을 찾아서 삭제하기 위해*/}\r\n                </td>\r\n            </tr>\r\n        ))\r\n    )\r\n\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product Image</th>\r\n                        <th>Product Title</th>\r\n                        <th>Product Continent</th>\r\n                        <th>Product Price</th>\r\n                        <th>Product Update</th>\r\n                        <th>Product Remove</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderItems()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductBlock\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\nimport { Empty } from 'antd'\r\nimport ProductBlock from './Sections/ProductBlock';\r\n\r\n\r\nfunction ProductManagePage(props) {\r\n\r\n\r\n    const [Products, setProducts] = useState([])\r\n    const [TotalList, setTotalList] = useState(0)\r\n    const [ShowList, setShowList] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/product/products/list')\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data);\r\n                    setProducts(response.data.productInfo)\r\n                    setShowList(true);\r\n                    setTotalList(response.data.productInfo.length);\r\n                } else {\r\n                    alert(\"상품을 가져오는데 실패했습니다.\")\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    let removeFromList = (productId) => {\r\n        console.log(productId);\r\n        const body = {\r\n            _id: productId\r\n        }\r\n\r\n        axios.post(`/api/product/delete`, body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert(\"상품 삭제에 성공했습니다.\")\r\n                    props.history.push('/');\r\n                } else {\r\n                    alert(\"상품 삭제에 실패했습니다.\")\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <h1> My Product</h1>\r\n            <div>\r\n                <ProductBlock products={Products} deleteProduct={removeFromList} />\r\n            </div>\r\n\r\n            {ShowList ?\r\n                <div style={{ marginTop: '3rem' }}>\r\n                    <h2>Total Product: {TotalList} EA</h2>\r\n                </div>\r\n                :\r\n                <>\r\n                    <br />\r\n                    <Empty description={false} />\r\n                    <h2>Total Product: 0 EA</h2>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductManagePage\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Input } from 'antd';\r\nimport FileUpload from '../../utils/FileUpload';\r\nimport axios from 'axios';\r\n\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n    { Key: 0, value: \"--------\" },\r\n    { Key: 1, value: \"Africa\" },\r\n    { Key: 2, value: \"Europe\" },\r\n    { Key: 3, value: \"Asia\" },\r\n    { Key: 4, value: \"North America\" },\r\n    { Key: 5, value: \"South America\" },\r\n    { Key: 6, value: \"Australia\" },\r\n    { Key: 7, value: \"Antarctica\" },\r\n\r\n]\r\nfunction UpdateProductPage(props) {\r\n\r\n    const productId = props.match.params.productId\r\n\r\n    const [Product, setProduct] = useState({})\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/product/products_by_id?id=${productId}&type=single`)\r\n            .then(response => {\r\n                setProduct(response.data[0]);\r\n                setTitle(response.data[0].title);\r\n                setDescription(response.data[0].description);\r\n                setPrice(response.data[0].price);\r\n                setImages(response.data[0].images);\r\n\r\n            })\r\n            .catch(err => alert(err))\r\n    }, [])\r\n\r\n    const [title, setTitle] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [price, setPrice] = useState(0)\r\n    const [continent, setContinent] = useState(\"\")\r\n    const [images, setImages] = useState([])\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n\r\n    }\r\n    const descriptionChangeHandler = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const priceChangeHandler = (event) => {\r\n        setPrice(event.currentTarget.value)\r\n    }\r\n\r\n    const continentChangeHandler = (event) => {\r\n        setContinent(event.currentTarget.value)\r\n    }\r\n\r\n    const updateImages = (newImages) => {\r\n        setImages(newImages)\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n\r\n\r\n        if (!title || !description || !price || !continent || !images) {\r\n            return alert(\" 모든 값을 넣어주셔야 합니다.\")\r\n        }\r\n        //서버에 채운 값들을 Request로 보낸다.\r\n\r\n        const body = {\r\n            writer: props.user.userData._id,\r\n            _id: Product._id,\r\n            title: title,\r\n            description: description,\r\n            price: price,\r\n            images: images,\r\n            continents: continent\r\n        }\r\n        axios.post(\"/api/product/update\", body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert(\"상품 수정에 성공했습니다.\")\r\n                    props.history.push('/product/products/list');\r\n                } else {\r\n                    alert(\"상품 수정에 실패했습니다.\")\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <h2> 여행 상품 수정</h2>\r\n            </div>\r\n            <Form onSubmit={submitHandler}>\r\n                {/*Drop Zone */}\r\n\r\n                <FileUpload imagesData={props} refreshFunction={updateImages} />\r\n\r\n                <br />\r\n                <br />\r\n                <label>이름</label>\r\n                <Input type=\"text\" name=\"title\" onChange={titleChangeHandler} value={title} />\r\n                <br />\r\n                <br />\r\n                <label>설명</label>\r\n                <TextArea onChange={descriptionChangeHandler} value={description} />\r\n                <br />\r\n                <br />\r\n                <label>가격($)</label>\r\n                <Input type=\"number\" onChange={priceChangeHandler} value={price} />\r\n                <br />\r\n                <br />\r\n                <select onChange={continentChangeHandler} >\r\n                    {Continents.map(item => (\r\n                        <option key={item.Key} value={item.value}> {item.value} </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <Button type=\"submit\" onClick={submitHandler}>\r\n                    확인\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProductPage\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../hoc/auth\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport Footer from \"./views/Footer/Footer\"\r\nimport UploadProductPage from \"./views/UploadProductPage/UploadProductPage.js\";\r\nimport DetailProductPage from './views/DetailProductPage/DetailProductPage.js';\r\nimport CartPage from './views/CartPage/CartPage.js';\r\nimport ProductManagePage from './views/ProductManagePage/ProductManagePage';\r\nimport { formatCountdown } from 'antd/lib/statistic/utils';\r\nimport UpdateProductPage from './views/UpdateProductPage/UpdateProductPage'\r\n\r\n//null   Anyone Can go inside\r\n//true   only logged in user can go inside\r\n//false  logged in user can't go inside\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={(<div>Loading...</div>)}>\r\n      <NavBar />\r\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n          <Route exact path=\"/product/upload\" component={Auth(UploadProductPage, true, true)} />\r\n          <Route exact path=\"/product/:productId\" component={Auth(DetailProductPage, null)} />\r\n          <Route exact path=\"/user/cart\" component={Auth(CartPage, true)} />\r\n          <Route exact path=\"/product/products/list\" component={Auth(ProductManagePage, true, true)} />\r\n          <Route exact path=\"/product/products/update/:productId\" component={Auth(UpdateProductPage, true, true)} />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport user from './user_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    ADD_TO_CART,\r\n    GET_CART_ITEMS,\r\n    REMONE_CART_ITEM\r\n} from '../_actions/types';\r\n\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case REGISTER_USER:\r\n            return { ...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return { ...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return { ...state }\r\n        case ADD_TO_CART:\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    cart: action.payload\r\n\r\n                }\r\n            }\r\n        case GET_CART_ITEMS:\r\n            return { ...state, cartDetail: action.payload }\r\n        case REMONE_CART_ITEM:\r\n            return {\r\n                ...state, cartDetail: action.payload.productInfo,\r\n                userData: {\r\n                    ...state.userData,\r\n                    cart: action.payload.cart\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}